{"ast":null,"code":"var _jsxFileName = \"/home/runner/vidregator-1/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport useSWR from 'swr';\nimport { useDebounce } from 'use-debounce';\nimport Global from '../components/Global';\nimport SearchBox from '../components/SearchBox';\nimport VideoSection from '../components/VideoSection';\nimport Stack from '../components/Stack';\nimport apiSearch from '../lib/apiSearch';\nexport default (() => {\n  const {\n    0: query,\n    1: setQuery\n  } = useState('');\n  const [debouncedQuery] = useDebounce(query, 800);\n  const {\n    data,\n    error\n  } = useSWR(debouncedQuery, apiSearch);\n  console.log(error);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, __jsx(Global, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), __jsx(Stack, {\n    space: 48,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, __jsx(SearchBox, {\n    value: query,\n    onChange: e => setQuery(e.target.value),\n    placeholder: \"Search for anything...\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), query.trim() && (error ? 'Error!' : data ? data.map(site => __jsx(VideoSection, {\n    name: site.name,\n    videos: site.results,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  })) : 'Loading...')));\n});","map":{"version":3,"sources":["/home/runner/vidregator-1/pages/index.js"],"names":["useState","useSWR","useDebounce","Global","SearchBox","VideoSection","Stack","apiSearch","query","setQuery","debouncedQuery","data","error","console","log","e","target","value","trim","map","site","name","results"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AAEA,gBAAe,MAAM;AACnB,QAAM;AAAA,OAAEC,KAAF;AAAA,OAASC;AAAT,MAAsBT,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAAEU,cAAF,IAAqBR,WAAW,CAACM,KAAD,EAAQ,GAAR,CAAtC;AACA,QAAM;AAAEG,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBX,MAAM,CAACS,cAAD,EAAiBH,SAAjB,CAA9B;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAGE,MAAC,KAAD;AAAO,IAAA,KAAK,EAAE,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AACE,IAAA,KAAK,EAAEJ,KADT;AAEE,IAAA,QAAQ,EAAGO,CAAD,IAAON,QAAQ,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAF3B;AAGE,IAAA,WAAW,EAAC,wBAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOGT,KAAK,CAACU,IAAN,OAAiBN,KAAK,GAAG,QAAH,GAAcD,IAAI,GACvCA,IAAI,CAACQ,GAAL,CAAUC,IAAD,IACP,MAAC,YAAD;AACE,IAAA,IAAI,EAAEA,IAAI,CAACC,IADb;AAEE,IAAA,MAAM,EAAED,IAAI,CAACE,OAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADuC,GAOrC,YAPH,CAPH,CAHF,CADF;AAsBD,CA5BD","sourcesContent":["import { useState } from 'react'\nimport useSWR from 'swr'\nimport { useDebounce } from 'use-debounce'\nimport Global from '../components/Global'\nimport SearchBox from '../components/SearchBox'\nimport VideoSection from '../components/VideoSection'\nimport Stack from '../components/Stack'\nimport apiSearch from '../lib/apiSearch'\n\nexport default () => {\n  const [ query, setQuery ] = useState('')\n  const [ debouncedQuery ] = useDebounce(query, 800)\n  const { data, error } = useSWR(debouncedQuery, apiSearch)\n  console.log(error)\n\n  return (\n    <div>\n      <Global />\n\n      <Stack space={48}>\n        <SearchBox\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n          placeholder='Search for anything...'\n        />\n\n        {query.trim() && (error ? 'Error!' : data ? (\n          data.map((site) => (\n            <VideoSection\n              name={site.name}\n              videos={site.results}\n            />\n          ))\n        ) : 'Loading...')}\n      </Stack>\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}