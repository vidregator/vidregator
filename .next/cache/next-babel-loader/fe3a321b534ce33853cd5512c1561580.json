{"ast":null,"code":"import fetch from 'isomorphic-unfetch';\nexport default {\n  name: 'Netflix',\n  search: async query => {\n    console.log('owo');\n    const res = await fetch(`https://unogs.com/nf.cgi?u=5unogs&q=${encodeURIComponent(query)}-!1900,2019-!0,5-!0,10-!0,10-!Any-!Any-!Any-!Any-!I%20Don&t=ns&cl=21,23,26,29,33,307,45,39,327,331,334,265,337,336,269,267,357,65,67,392,268,400,402,408,412,447,348,270,73,34,425,432,46,78&st=adv&ob=Relevance&p=1&l=100&inc=&ao=and`, {\n      headers: {\n        'Cookie': `PHPSESSID=52mbin4up2mmi8cdu5pd03h587; cooksess=52mbin4up2mmi8cdu5pd03h587; sstring=${encodeURIComponent(query)}-!1900%2C2019-!0%2C5-!0%2C10-!0%2C10-!Any-!Any-!Any-!Any-!I%20Don-!and`,\n        'Host': 'unogs.com',\n        'Referer': 'https://unogs.com/',\n        'X-Requested-With': 'XMLHttpRequest'\n      }\n    });\n    const json = await res.json();\n    return json.ITEMS.slice(0, 5).map(([id, name, image, description, __, ___, type, year]) => {\n      const date = new Date();\n      date.setYear(year);\n      return {\n        name,\n        image,\n        description,\n        tags: [type],\n        uploadDate: date.getTime(),\n        url: `https://www.netflix.com/watch/${id}`\n      };\n    });\n  }\n};","map":{"version":3,"sources":["/home/runner/vidregator-1/sites/netflix.js"],"names":["fetch","name","search","query","console","log","res","encodeURIComponent","headers","json","ITEMS","slice","map","id","image","description","__","___","type","year","date","Date","setYear","tags","uploadDate","getTime","url"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AAEA,eAAe;AACbC,EAAAA,IAAI,EAAE,SADO;AAEbC,EAAAA,MAAM,EAAE,MAAOC,KAAP,IAAiB;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACA,UAAMC,GAAG,GAAG,MAAMN,KAAK,CAAE,uCAAsCO,kBAAkB,CAACJ,KAAD,CAAQ,wOAAlE,EAA2S;AAChUK,MAAAA,OAAO,EAAE;AACP,kBAAW,sFAAqFD,kBAAkB,CAACJ,KAAD,CAAQ,wEADnH;AAEP,gBAAQ,WAFD;AAGP,mBAAW,oBAHJ;AAIP,4BAAoB;AAJb;AADuT,KAA3S,CAAvB;AAQA,UAAMM,IAAI,GAAG,MAAMH,GAAG,CAACG,IAAJ,EAAnB;AAEA,WAAOA,IAAI,CAACC,KAAL,CAAWC,KAAX,CAAiB,CAAjB,EAAoB,CAApB,EAAuBC,GAAvB,CAA2B,CAAC,CAAEC,EAAF,EAAMZ,IAAN,EAAYa,KAAZ,EAAmBC,WAAnB,EAAgCC,EAAhC,EAAoCC,GAApC,EAAyCC,IAAzC,EAA+CC,IAA/C,CAAD,KAA2D;AAC3F,YAAMC,IAAI,GAAG,IAAIC,IAAJ,EAAb;AACAD,MAAAA,IAAI,CAACE,OAAL,CAAaH,IAAb;AAEA,aAAO;AACLlB,QAAAA,IADK;AAELa,QAAAA,KAFK;AAGLC,QAAAA,WAHK;AAILQ,QAAAA,IAAI,EAAE,CAAEL,IAAF,CAJD;AAKLM,QAAAA,UAAU,EAAEJ,IAAI,CAACK,OAAL,EALP;AAMLC,QAAAA,GAAG,EAAG,iCAAgCb,EAAG;AANpC,OAAP;AAQD,KAZM,CAAP;AAaD;AA3BY,CAAf","sourcesContent":["import fetch from 'isomorphic-unfetch'\n\nexport default {\n  name: 'Netflix',\n  search: async (query) => {\n    console.log('owo')\n    const res = await fetch(`https://unogs.com/nf.cgi?u=5unogs&q=${encodeURIComponent(query)}-!1900,2019-!0,5-!0,10-!0,10-!Any-!Any-!Any-!Any-!I%20Don&t=ns&cl=21,23,26,29,33,307,45,39,327,331,334,265,337,336,269,267,357,65,67,392,268,400,402,408,412,447,348,270,73,34,425,432,46,78&st=adv&ob=Relevance&p=1&l=100&inc=&ao=and`, {\n      headers: {\n        'Cookie': `PHPSESSID=52mbin4up2mmi8cdu5pd03h587; cooksess=52mbin4up2mmi8cdu5pd03h587; sstring=${encodeURIComponent(query)}-!1900%2C2019-!0%2C5-!0%2C10-!0%2C10-!Any-!Any-!Any-!Any-!I%20Don-!and`,\n        'Host': 'unogs.com',\n        'Referer': 'https://unogs.com/',\n        'X-Requested-With': 'XMLHttpRequest'\n      }\n    })\n    const json = await res.json()\n\n    return json.ITEMS.slice(0, 5).map(([ id, name, image, description, __, ___, type, year ]) => {\n      const date = new Date()\n      date.setYear(year)\n\n      return {\n        name,\n        image,\n        description,\n        tags: [ type ],\n        uploadDate: date.getTime(),\n        url: `https://www.netflix.com/watch/${id}`\n      }\n    })\n  }\n}"]},"metadata":{},"sourceType":"module"}