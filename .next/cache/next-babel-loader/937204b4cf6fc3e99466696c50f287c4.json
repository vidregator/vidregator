{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport fetch from 'isomorphic-unfetch';\nexport default (async query => {\n  if (!query.trim()) return false;\n  const cached = false && window.localStorage.getItem(`cache:${encodeURIComponent(query)}`);\n  if (cached) return JSON.parse(cached);\n  const res = await fetch(`/api/search/${encodeURIComponent(query)}`);\n\n  if (res.ok) {\n    const json = await res.json();\n    false && window.localStorage.setItem(`cache:${encodeURIComponent(query)}`, _JSON$stringify(json));\n    return json;\n  } else {\n    throw new Error((await res.text()));\n  }\n});","map":{"version":3,"sources":["/home/runner/vidregator-1/lib/apiSearch.js"],"names":["fetch","query","trim","cached","window","localStorage","getItem","encodeURIComponent","JSON","parse","res","ok","json","setItem","Error","text"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AAEA,gBAAe,MAAOC,KAAP,IAAiB;AAC9B,MAAI,CAACA,KAAK,CAACC,IAAN,EAAL,EAAmB,OAAO,KAAP;AAEnB,QAAMC,MAAM,GAAG,SAA8BC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA6B,SAAQC,kBAAkB,CAACN,KAAD,CAAQ,EAA/D,CAA7C;AACA,MAAIE,MAAJ,EAAY,OAAOK,IAAI,CAACC,KAAL,CAAWN,MAAX,CAAP;AAEZ,QAAMO,GAAG,GAAG,MAAMV,KAAK,CAAE,eAAcO,kBAAkB,CAACN,KAAD,CAAQ,EAA1C,CAAvB;;AACA,MAAIS,GAAG,CAACC,EAAR,EAAY;AACV,UAAMC,IAAI,GAAG,MAAMF,GAAG,CAACE,IAAJ,EAAnB;AACA,aAA8BR,MAAM,CAACC,YAAP,CAAoBQ,OAApB,CAA6B,SAAQN,kBAAkB,CAACN,KAAD,CAAQ,EAA/D,EAAkE,gBAAeW,IAAf,CAAlE,CAA9B;AACA,WAAOA,IAAP;AACD,GAJD,MAIO;AACL,UAAM,IAAIE,KAAJ,EAAU,MAAMJ,GAAG,CAACK,IAAJ,EAAhB,EAAN;AACD;AACF,CAdD","sourcesContent":["import fetch from 'isomorphic-unfetch'\n\nexport default async (query) => {\n  if (!query.trim()) return false\n\n  const cached = typeof window === 'object' && window.localStorage.getItem(`cache:${encodeURIComponent(query)}`)\n  if (cached) return JSON.parse(cached)\n\n  const res = await fetch(`/api/search/${encodeURIComponent(query)}`)\n  if (res.ok) {\n    const json = await res.json()\n    typeof window === 'object' && window.localStorage.setItem(`cache:${encodeURIComponent(query)}`, JSON.stringify(json))\n    return json\n  } else {\n    throw new Error(await res.text())\n  }\n}"]},"metadata":{},"sourceType":"module"}