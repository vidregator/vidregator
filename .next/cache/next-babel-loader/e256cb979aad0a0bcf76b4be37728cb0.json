{"ast":null,"code":"var _jsxFileName = \"/home/runner/vidregator/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport Head from 'next/head';\nimport useSWR from 'swr';\nimport apiSearch from '../lib/apiSearch';\nexport default (() => {\n  const {\n    0: search,\n    1: setSearch\n  } = useState();\n  const {\n    data,\n    error\n  } = useSWR('test lol', apiSearch);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"Vidregator\"), __jsx(\"link\", {\n    rel: \"icon\",\n    href: \"/favicon.ico\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://cdn.jsdelivr.net/gh/kognise/water.css@latest/dist/dark.min.css\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  })), error ? 'Error!' : data ? data.map(site => __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, __jsx(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, site.name), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, site.results.map(result => __jsx(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, __jsx(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, result.name), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), \"Description:  \", result.description, __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), \"Tags: \", result.tags.join(', ')))))) : 'Loading...');\n});","map":{"version":3,"sources":["/home/runner/vidregator/pages/index.js"],"names":["useState","Head","useSWR","apiSearch","search","setSearch","data","error","map","site","name","results","result","description","tags","join"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AAEA,gBAAe,MAAM;AACnB,QAAM;AAAA,OAAEC,MAAF;AAAA,OAAUC;AAAV,MAAwBL,QAAQ,EAAtC;AACA,QAAM;AAAEM,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBL,MAAM,CAAC,UAAD,EAAaC,SAAb,CAA9B;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAM,IAAA,GAAG,EAAC,MAAV;AAAiB,IAAA,IAAI,EAAC,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAM,IAAA,GAAG,EAAC,YAAV;AAAuB,IAAA,IAAI,EAAC,wEAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF,EAOGI,KAAK,GAAG,QAAH,GAAcD,IAAI,GACtBA,IAAI,CAACE,GAAL,CAAUC,IAAD,IACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASA,IAAI,CAACC,IAAd,CADF,EAC8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD9B,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,IAAI,CAACE,OAAL,CAAaH,GAAb,CAAkBI,MAAD,IACpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASA,MAAM,CAACF,IAAhB,CADF,EACgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADhC,oBAEiBE,MAAM,CAACC,WAFxB,EAEoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFpC,YAGSD,MAAM,CAACE,IAAP,CAAYC,IAAZ,CAAiB,IAAjB,CAHT,CADG,CAAL,CAFF,CADF,CADsB,GAapB,YApBN,CADF;AAwBD,CA5BD","sourcesContent":["import { useState } from 'react'\nimport Head from 'next/head'\nimport useSWR from 'swr'\nimport apiSearch from '../lib/apiSearch'\n\nexport default () => {\n  const [ search, setSearch ] = useState()\n  const { data, error } = useSWR('test lol', apiSearch)\n\n  return (\n    <div>\n      <Head>\n        <title>Vidregator</title>\n        <link rel='icon' href='/favicon.ico' />\n        <link rel='stylesheet' href='https://cdn.jsdelivr.net/gh/kognise/water.css@latest/dist/dark.min.css' />\n      </Head>\n\n      {error ? 'Error!' : data ? (\n        data.map((site) => (\n          <div>\n            <strong>{site.name}</strong><br/>\n            <ul>{site.results.map((result) => (\n              <li>\n                <strong>{result.name}</strong><br/>\n                Description:  {result.description}<br/>\n                Tags: {result.tags.join(', ')}\n              </li>\n            ))}</ul>\n          </div>\n        ))\n      ) : 'Loading...'}\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}