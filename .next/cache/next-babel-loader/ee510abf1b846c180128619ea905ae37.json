{"ast":null,"code":"var _jsxFileName = \"/home/runner/vidregator-1/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport useSWR from 'swr';\nimport apiSearch from '../lib/apiSearch';\nexport default (function () {\n  var _useState = useState('test lol'),\n      query = _useState[0],\n      setQuery = _useState[1];\n\n  var _useSWR = useSWR(query, apiSearch),\n      data = _useSWR.data,\n      error = _useSWR.error;\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    type: \"search\",\n    value: query,\n    onChange: function onChange(e) {\n      return setQuery(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }), error ? 'Error!' : data ? data.map(function (site) {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, site.name), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }), __jsx(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, site.results.map(function (result) {\n      return __jsx(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, __jsx(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, result.name), __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }), \"Description:  \", result.description, __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }), \"Tags: \", result.tags.join(', '));\n    })));\n  }) : 'Loading...');\n});","map":{"version":3,"sources":["/home/runner/vidregator-1/pages/index.js"],"names":["useState","useSWR","apiSearch","query","setQuery","data","error","e","target","value","map","site","name","results","result","description","tags","join"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AAEA,gBAAe,YAAM;AAAA,kBACSF,QAAQ,CAAC,UAAD,CADjB;AAAA,MACXG,KADW;AAAA,MACJC,QADI;;AAAA,gBAEKH,MAAM,CAACE,KAAD,EAAQD,SAAR,CAFX;AAAA,MAEXG,IAFW,WAEXA,IAFW;AAAA,MAELC,KAFK,WAELA,KAFK;;AAInB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,KAAK,EAAEH,KAFT;AAGE,IAAA,QAAQ,EAAE,kBAACI,CAAD;AAAA,aAAOH,QAAQ,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAf;AAAA,KAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAQGH,KAAK,GAAG,QAAH,GAAcD,IAAI,GACtBA,IAAI,CAACK,GAAL,CAAS,UAACC,IAAD;AAAA,WACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASA,IAAI,CAACC,IAAd,CADF,EAC8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD9B,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,IAAI,CAACE,OAAL,CAAaH,GAAb,CAAiB,UAACI,MAAD;AAAA,aACpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAASA,MAAM,CAACF,IAAhB,CADF,EACgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADhC,oBAEiBE,MAAM,CAACC,WAFxB,EAEoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFpC,YAGSD,MAAM,CAACE,IAAP,CAAYC,IAAZ,CAAiB,IAAjB,CAHT,CADoB;AAAA,KAAjB,CAAL,CAFF,CADO;AAAA,GAAT,CADsB,GAapB,YArBN,CADF;AAyBD,CA7BD","sourcesContent":["import { useState } from 'react'\nimport useSWR from 'swr'\nimport apiSearch from '../lib/apiSearch'\n\nexport default () => {\n  const [ query, setQuery ] = useState('test lol')\n  const { data, error } = useSWR(query, apiSearch)\n\n  return (\n    <div>\n\n      <input\n        type='search'\n        value={query}\n        onChange={(e) => setQuery(e.target.value)}\n      />\n\n      {error ? 'Error!' : data ? (\n        data.map((site) => (\n          <div>\n            <strong>{site.name}</strong><br/>\n            <ul>{site.results.map((result) => (\n              <li>\n                <strong>{result.name}</strong><br/>\n                Description:  {result.description}<br/>\n                Tags: {result.tags.join(', ')}\n              </li>\n            ))}</ul>\n          </div>\n        ))\n      ) : 'Loading...'}\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}