{"ast":null,"code":"var _jsxFileName = \"/home/runner/vidregator-1/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport useSWR from 'swr';\nimport apiSearch from '../lib/apiSearch';\nexport default (() => {\n  const {\n    0: query,\n    1: setQuery\n  } = useState('test lol');\n  const {\n    data,\n    error\n  } = useSWR(query, apiSearch);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    type: \"search\",\n    value: query,\n    onChange: e => setQuery(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }), error ? 'Error!' : data ? data.map(site => __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, __jsx(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, site.name), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, site.results.map(result => __jsx(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, __jsx(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, result.name), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), \"Description:  \", result.description, __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), \"Tags: \", result.tags.join(', ')))))) : 'Loading...');\n});","map":{"version":3,"sources":["/home/runner/vidregator-1/pages/index.js"],"names":["useState","useSWR","apiSearch","query","setQuery","data","error","e","target","value","map","site","name","results","result","description","tags","join"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AAEA,gBAAe,MAAM;AACnB,QAAM;AAAA,OAAEC,KAAF;AAAA,OAASC;AAAT,MAAsBJ,QAAQ,CAAC,UAAD,CAApC;AACA,QAAM;AAAEK,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBL,MAAM,CAACE,KAAD,EAAQD,SAAR,CAA9B;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,KAAK,EAAEC,KAFT;AAGE,IAAA,QAAQ,EAAGI,CAAD,IAAOH,QAAQ,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAQGH,KAAK,GAAG,QAAH,GAAcD,IAAI,GACtBA,IAAI,CAACK,GAAL,CAAUC,IAAD,IACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASA,IAAI,CAACC,IAAd,CADF,EAC8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD9B,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,IAAI,CAACE,OAAL,CAAaH,GAAb,CAAkBI,MAAD,IACpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASA,MAAM,CAACF,IAAhB,CADF,EACgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADhC,oBAEiBE,MAAM,CAACC,WAFxB,EAEoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFpC,YAGSD,MAAM,CAACE,IAAP,CAAYC,IAAZ,CAAiB,IAAjB,CAHT,CADG,CAAL,CAFF,CADF,CADsB,GAapB,YArBN,CADF;AAyBD,CA7BD","sourcesContent":["import { useState } from 'react'\nimport useSWR from 'swr'\nimport apiSearch from '../lib/apiSearch'\n\nexport default () => {\n  const [ query, setQuery ] = useState('test lol')\n  const { data, error } = useSWR(query, apiSearch)\n\n  return (\n    <div>\n\n      <input\n        type='search'\n        value={query}\n        onChange={(e) => setQuery(e.target.value)}\n      />\n\n      {error ? 'Error!' : data ? (\n        data.map((site) => (\n          <div>\n            <strong>{site.name}</strong><br/>\n            <ul>{site.results.map((result) => (\n              <li>\n                <strong>{result.name}</strong><br/>\n                Description:  {result.description}<br/>\n                Tags: {result.tags.join(', ')}\n              </li>\n            ))}</ul>\n          </div>\n        ))\n      ) : 'Loading...'}\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}