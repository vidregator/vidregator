{"ast":null,"code":"var _jsxFileName = \"/home/runner/vidregator-1/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport useSWR from 'swr';\nimport Global from '../components/Global';\nimport SearchBox from '../components/SearchBox';\nimport VideoSection from '../components/VideoSection';\nimport Stack from '../components/Stack';\nimport apiSearch from '../lib/apiSearch';\nexport default (() => {\n  const {\n    0: query,\n    1: setQuery\n  } = useState('test lol');\n  const {\n    data,\n    error\n  } = useSWR(query, apiSearch);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, __jsx(Global, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }), __jsx(Stack, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, __jsx(SearchBox, {\n    value: query,\n    onChange: e => setQuery(e.target.value),\n    placeholder: \"Search for anything...\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), error ? 'Error!' : data ? data.map(site => __jsx(VideoSection, {\n    name: site.name,\n    videos: site.results,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  })) : 'Loading...'));\n});","map":{"version":3,"sources":["/home/runner/vidregator-1/pages/index.js"],"names":["useState","useSWR","Global","SearchBox","VideoSection","Stack","apiSearch","query","setQuery","data","error","e","target","value","map","site","name","results"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AAEA,gBAAe,MAAM;AACnB,QAAM;AAAA,OAAEC,KAAF;AAAA,OAASC;AAAT,MAAsBR,QAAQ,CAAC,UAAD,CAApC;AACA,QAAM;AAAES,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBT,MAAM,CAACM,KAAD,EAAQD,SAAR,CAA9B;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAGE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,MAAC,SAAD;AACE,IAAA,KAAK,EAAEC,KADT;AAEE,IAAA,QAAQ,EAAGI,CAAD,IAAOH,QAAQ,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAF3B;AAGE,IAAA,WAAW,EAAC,wBAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAOCH,KAAK,GAAG,QAAH,GAAcD,IAAI,GACtBA,IAAI,CAACK,GAAL,CAAUC,IAAD,IACP,MAAC,YAAD;AACE,IAAA,IAAI,EAAEA,IAAI,CAACC,IADb;AAEE,IAAA,MAAM,EAAED,IAAI,CAACE,OAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADsB,GAOpB,YAdJ,CAHF,CADF;AAsBD,CA1BD","sourcesContent":["import { useState } from 'react'\nimport useSWR from 'swr'\nimport Global from '../components/Global'\nimport SearchBox from '../components/SearchBox'\nimport VideoSection from '../components/VideoSection'\nimport Stack from '../components/Stack'\nimport apiSearch from '../lib/apiSearch'\n\nexport default () => {\n  const [ query, setQuery ] = useState('test lol')\n  const { data, error } = useSWR(query, apiSearch)\n\n  return (\n    <div>\n      <Global />\n\n      <Stack>\n      <SearchBox\n        value={query}\n        onChange={(e) => setQuery(e.target.value)}\n        placeholder='Search for anything...'\n      />\n\n      {error ? 'Error!' : data ? (\n        data.map((site) => (\n          <VideoSection\n            name={site.name}\n            videos={site.results}\n          />\n        ))\n      ) : 'Loading...'}\n      </Stack>\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}