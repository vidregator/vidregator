{"ast":null,"code":"import fetch from 'isomorphic-unfetch';\nconst topics = {\n  '/m/04rlf': ['music'],\n  '/m/05fw6t': ['music', 'childrens-music'],\n  '/m/02mscn': ['music', 'christian-music'],\n  '/m/0ggq0m': ['music', 'classical-music'],\n  '/m/01lyv': ['music', 'country'],\n  '/m/02lkt': ['music', 'electronic-music'],\n  '/m/0glt670': ['music', 'hip-hop'],\n  '/m/05rwpb': ['music', 'independent-music'],\n  '/m/03_d0': ['music', 'jazz'],\n  '/m/028sqc': ['music', 'asia'],\n  '/m/0g293': ['music', 'latin-america'],\n  '/m/064t9': ['music', 'pop-music'],\n  '/m/06cqb': ['music', 'reggae'],\n  '/m/06j6l': ['music', 'rhythm-and-blues'],\n  '/m/06by7': ['music', 'rock-music'],\n  '/m/0gywn': ['music', 'soul'],\n  '/m/0bzvm2': ['gaming'],\n  '/m/025zzc': ['gaming', 'action-games'],\n  '/m/02ntfj': ['gaming', 'action-games'],\n  '/m/0b1vjn': ['gaming', 'casual-gaming'],\n  '/m/02hygl': ['gaming', 'music-games'],\n  '/m/04q1x3q': ['gaming', 'puzzles'],\n  '/m/01sjng': ['gaming', 'racing-games', 'racing'],\n  '/m/0403l3g': ['gaming', 'rpg'],\n  '/m/021bp2': ['gaming', 'simulation'],\n  '/m/022dc6': ['gaming', 'sports'],\n  '/m/03hf_rm': ['gaming', 'strategy'],\n  '/m/06ntj': ['sports'],\n  '/m/0jm_': ['sports', 'soccer'],\n  '/m/018jz': ['sports', 'baseball'],\n  '/m/018w8': ['sports', 'basketball'],\n  '/m/01cgz': ['sports', 'boxing'],\n  '/m/09xp_': ['sports', 'cricket'],\n  '/m/02vx4': ['sports', 'football'],\n  '/m/037hz': ['sports', 'golf'],\n  '/m/03tmr': ['sports', 'ice-hockey'],\n  '/m/01h7lh': ['sports', 'martial-arts'],\n  '/m/0410tth': ['sports', 'motorsport'],\n  '/m/066wd': ['sports', 'wrestling'],\n  '/m/07bs0': ['sports', 'tennis'],\n  '/m/07_53': ['sports', 'volleyball'],\n  '/m/02jjt': ['entertainment'],\n  '/m/095bb': ['entertainment', 'animation', 'cartoon'],\n  '/m/09kqc': ['entertainment', 'humor'],\n  '/m/02vxn': ['entertainment', 'movies'],\n  '/m/05qjc': ['entertainment', 'performing-arts'],\n  '/m/019_rr': ['lifestyle'],\n  '/m/032tl': ['lifestyle', 'fashion'],\n  '/m/027x7n': ['lifestyle', 'fitness', 'health'],\n  '/m/02wbm': ['lifestyle', 'food', 'health'],\n  '/m/0kt51': ['lifestyle', 'health'],\n  '/m/03glg': ['lifestyle', 'hobby'],\n  '/m/068hy': ['lifestyle', 'pets'],\n  '/m/041xxh': ['lifestyle', 'beauty'],\n  '/m/07c1v': ['technology', 'knowledge'],\n  '/m/07bxq': ['tourism', 'society'],\n  '/m/07yv9': ['vehicles'],\n  '/m/01k8wb': ['knowledge', 'society'],\n  '/m/098wr': ['society']\n};\nexport default {\n  name: 'YouTube',\n  search: async query => {\n    const res1 = await fetch(`https://www.googleapis.com/youtube/v3/search?part=snippet&maxResults=7&q=${encodeURIComponent(query)}&key=${encodeURIComponent(process.env.YOUTUBE_API_KEY)}`, {\n      headers: {\n        'Accept': 'application/json'\n      }\n    });\n    const json1 = await res1.json();\n    const topicPromises = jso1n.items.map(item => (async () => {\n      const res2 = await fetch(`https://www.googleapis.com/youtube/v3/search?part=snippet&maxResults=7&q=${encodeURIComponent(query)}&key=${encodeURIComponent(process.env.YOUTUBE_API_KEY)}`, {\n        headers: {\n          'Accept': 'application/json'\n        }\n      });\n      const json2 = await res2.json();\n    })());\n    return json1.items.map((item, index) => ({\n      name: item.snippet.title,\n      description: item.snippet.description,\n      tags: query.split(' '),\n      uploadDate: Date.parse(item.snippet.publishedAt),\n      url: `https://youtube.com/watch?v=${item.id.videoId}`,\n      image: item.snippet.thumbnails.default.url\n    }));\n  }\n};","map":{"version":3,"sources":["/home/runner/vidregator-1/sites/youtube.js"],"names":["fetch","topics","name","search","query","res1","encodeURIComponent","process","env","YOUTUBE_API_KEY","headers","json1","json","topicPromises","jso1n","items","map","item","res2","json2","index","snippet","title","description","tags","split","uploadDate","Date","parse","publishedAt","url","id","videoId","image","thumbnails","default"],"mappings":"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","sourcesContent":["import fetch from 'isomorphic-unfetch'\n\nconst topics = {\n  '/m/04rlf': [ 'music' ],\n  '/m/05fw6t': [ 'music', 'childrens-music' ],\n  '/m/02mscn': [ 'music', 'christian-music' ],\n  '/m/0ggq0m': [ 'music', 'classical-music' ],\n  '/m/01lyv': [ 'music', 'country' ],\n  '/m/02lkt': [ 'music', 'electronic-music' ],\n  '/m/0glt670': [ 'music', 'hip-hop' ],\n  '/m/05rwpb': [ 'music', 'independent-music' ],\n  '/m/03_d0': [ 'music', 'jazz' ],\n  '/m/028sqc': [ 'music', 'asia' ],\n  '/m/0g293': [ 'music', 'latin-america' ],\n  '/m/064t9': [ 'music', 'pop-music' ],\n  '/m/06cqb': [ 'music', 'reggae' ],\n  '/m/06j6l': [ 'music', 'rhythm-and-blues' ],\n  '/m/06by7': [ 'music', 'rock-music' ],\n  '/m/0gywn': [ 'music', 'soul' ],\n  '/m/0bzvm2': [ 'gaming' ],\n  '/m/025zzc': [ 'gaming', 'action-games' ],\n  '/m/02ntfj': [ 'gaming', 'action-games' ],\n  '/m/0b1vjn': [ 'gaming', 'casual-gaming' ],\n  '/m/02hygl': [ 'gaming', 'music-games' ],\n  '/m/04q1x3q': [ 'gaming', 'puzzles' ],\n  '/m/01sjng': [ 'gaming', 'racing-games', 'racing' ],\n  '/m/0403l3g': [ 'gaming', 'rpg' ],\n  '/m/021bp2': [ 'gaming', 'simulation' ],\n  '/m/022dc6': [ 'gaming', 'sports' ],\n  '/m/03hf_rm': [ 'gaming', 'strategy' ],\n  '/m/06ntj': [ 'sports' ],\n  '/m/0jm_': [ 'sports', 'soccer' ],\n  '/m/018jz': [ 'sports', 'baseball' ],\n  '/m/018w8': [ 'sports', 'basketball' ],\n  '/m/01cgz': [ 'sports', 'boxing' ],\n  '/m/09xp_': [ 'sports', 'cricket' ],\n  '/m/02vx4': [ 'sports', 'football' ],\n  '/m/037hz': [ 'sports', 'golf' ],\n  '/m/03tmr': [ 'sports', 'ice-hockey' ],\n  '/m/01h7lh': [ 'sports', 'martial-arts' ],\n  '/m/0410tth': [ 'sports', 'motorsport' ],\n  '/m/066wd': [ 'sports', 'wrestling' ],\n  '/m/07bs0': [ 'sports', 'tennis' ],\n  '/m/07_53': [ 'sports', 'volleyball' ],\n  '/m/02jjt': [ 'entertainment' ],\n  '/m/095bb': [ 'entertainment', 'animation', 'cartoon' ],\n  '/m/09kqc': [ 'entertainment', 'humor' ],\n  '/m/02vxn': [ 'entertainment', 'movies' ],\n  '/m/05qjc': [ 'entertainment', 'performing-arts' ],\n  '/m/019_rr': [ 'lifestyle' ],\n  '/m/032tl': [ 'lifestyle', 'fashion' ],\n  '/m/027x7n': [ 'lifestyle', 'fitness', 'health' ],\n  '/m/02wbm': [ 'lifestyle', 'food', 'health' ],\n  '/m/0kt51': [ 'lifestyle', 'health' ],\n  '/m/03glg': [ 'lifestyle', 'hobby' ],\n  '/m/068hy': [ 'lifestyle', 'pets' ],\n  '/m/041xxh': [ 'lifestyle', 'beauty' ],\n  '/m/07c1v': [ 'technology', 'knowledge' ],\n  '/m/07bxq': [ 'tourism', 'society' ],\n  '/m/07yv9': [ 'vehicles' ],\n  '/m/01k8wb': [ 'knowledge', 'society' ],\n  '/m/098wr': [ 'society' ]\n}\n\nexport default {\n  name: 'YouTube',\n  search: async (query) => {\n    const res1 = await fetch(`https://www.googleapis.com/youtube/v3/search?part=snippet&maxResults=7&q=${encodeURIComponent(query)}&key=${encodeURIComponent(process.env.YOUTUBE_API_KEY)}`, {\n      headers: {  'Accept': 'application/json' }\n    })\n    const json1 = await res1.json()\n\n    const topicPromises = jso1n.items.map((item) => (async () => {\n      const res2 = await fetch(`https://www.googleapis.com/youtube/v3/search?part=snippet&maxResults=7&q=${encodeURIComponent(query)}&key=${encodeURIComponent(process.env.YOUTUBE_API_KEY)}`, {\n        headers: {  'Accept': 'application/json' }\n      })\n      const json2 = await res2.json()\n    })())\n\n    return json1.items.map((item, index) => ({\n      name: item.snippet.title,\n      description: item.snippet.description,\n      tags: query.split(' '),\n      uploadDate: Date.parse(item.snippet.publishedAt),\n      url: `https://youtube.com/watch?v=${item.id.videoId}`,\n      image: item.snippet.thumbnails.default.url\n    }))\n  }\n}"]},"metadata":{},"sourceType":"module"}